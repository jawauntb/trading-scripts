// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0.
// © jawauntb

//@version=5
indicator("Volatility Clustering Estimator", overlay=false)

// Input parameters
dailyClusteringLength = input.int(20, minval=1, title="Daily Clustering Length")
weeklyClusteringLength = input.int(4, minval=1, title="Weekly Clustering Length") // Approximate to a month
monthlyClusteringLength = input.int(3, minval=1, title="Monthly Clustering Length") // Approximate to a quarter

// Calculate daily close prices and returns
dailyClose = request.security(syminfo.tickerid, "D", close, lookahead=barmerge.lookahead_on)
dailyReturn = math.log(dailyClose / dailyClose[1])

// Calculate weekly close prices and returns
weeklyClose = request.security(syminfo.tickerid, "W", close, lookahead=barmerge.lookahead_on)
weeklyReturn = math.log(weeklyClose / weeklyClose[1])

// Calculate monthly close prices and returns
monthlyClose = request.security(syminfo.tickerid, "M", close, lookahead=barmerge.lookahead_on)
monthlyReturn = math.log(monthlyClose / monthlyClose[1])

// Calculate volatility clustering
dailyVolatilityClustering = ta.correlation(dailyReturn, dailyReturn[1], dailyClusteringLength) * 100
weeklyVolatilityClustering = ta.correlation(weeklyReturn, weeklyReturn[1], weeklyClusteringLength) * 100
monthlyVolatilityClustering = ta.correlation(monthlyReturn, monthlyReturn[1], monthlyClusteringLength) * 100

// Plot volatility clustering
plot(dailyVolatilityClustering, color=color.fuchsia, title="Daily Volatility Clustering")
plot(weeklyVolatilityClustering, color=color.lime, title="Weekly Volatility Clustering")
plot(monthlyVolatilityClustering, color=color.aqua, title="Monthly Volatility Clustering")
